apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fetch-supplier-data-pipeline
  annotations:
    scenarios.ai.sap.com/description: "Introduction to SAP AI Core"
    scenarios.ai.sap.com/name: "NORTHWIND-DEMO"
    executables.ai.sap.com/description: "Fetches supplier data from Northwind service"
    executables.ai.sap.com/name: "NORTHWIND Pipeline"
  labels:
    scenarios.ai.sap.com/id: "learning"
    ai.sap.com/version: "1.0"
spec:
  entrypoint: fetch-supplier-data-pipeline
  templates:
    - name: fetch-supplier-data-pipeline
      script:
        image: python:3.8-slim
        command: ["sh", "-c"]
        source: |
          set -e  # Exit immediately if a command exits with a non-zero status
          pip install requests && python - <<EOF
          import os
          import requests

          def fetch_suppliers():
          
              # os.makedirs('/tmp', exist_ok=True)
              
              # OData Service URL
              url = "https://services.odata.org/northwind/northwind.svc/Suppliers?$format=json"

              try:
                  # Send GET request to fetch supplier data
                  response = requests.get(url)
                  response.raise_for_status()  # Raise an error for HTTP errors

                  # Parse JSON response
                  data = response.json()
                  suppliers = data.get("value", [])

                  # Display supplier data
                  print("Supplier Data:")
                  # with open('/tmp/supplier-output.txt', 'w') as f:
                  for supplier in suppliers:
                        output = f"ID: {supplier['SupplierID']}, Name: {supplier['CompanyName']}, Country: {supplier['Country']}\n"
                        print(output)
                        # f.write(output)

              except Exception as e:
                  print(f"Error fetching supplier data: {e}")

          if __name__ == "__main__":
              fetch_suppliers()
          # EOF
          # print("fetch_suppliers.py")
      # outputs:
      #   parameters:
      #     - name: supplier-output
      #       valueFrom:
      #         path: /tmp/supplier-output.txt
      volumeMounts:
        - name: script-volume
          mountPath: /mnt/scripts
  volumes:
    - name: script-volume
      configMap:
        name: fetch-suppliers-script
